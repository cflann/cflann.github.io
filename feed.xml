<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Conor Flannigan</title>
    <atom:link href="http://example.com/feed.xml" rel="self" type="application/rss+xml"/>
    <link>http://example.com/</link>
    <description>Conor Flannigan is a software engineer living in Berkeley, CA filling his brain with knowledge at Hack Reactor.</description>
    <pubDate>Fri, 13 Mar 2015 14:48:13 -0700</pubDate>
    
      <item>
        <title>Running your Ionic app on an Android device (OS X)</title>
        <link>http://example.com/2015/03/13/running-ionic-app-on-android.html</link>
        <guid isPermaLink="true">http://example.com/2015/03/13/running-ionic-app-on-android.html</guid>
        <description>&lt;p&gt;While developing a mobile app, chances are you will eventually hit a point where you need to test things out on an actual device. Here’s a quick primer on how to get your Ionic app up and running on an android smartphone. &lt;/p&gt;

&lt;p&gt;&lt;em&gt;Note: this guide is intended for developers on OS X and it is assumed that you already have a stable/working Ionic app&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&quot;step-1-install-the-java-development-kit-jdk-if-you-dont-have-it-already&quot;&gt;Step 1: Install the Java Development Kit (JDK) if you don’t have it already&lt;/h2&gt;

&lt;p&gt;Go to &lt;a href=&quot;http://www.oracle.com/technetwork/java/javase/downloads/index.html&quot;&gt;Oracle’s download page&lt;/a&gt; and install the latest version of the JDK.&lt;/p&gt;

&lt;p&gt;Afterward, I recommend you verify your version of Java &lt;a href=&quot;https://www.java.com/en/download/installed.jsp&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;step-2-install-the-android-sdk&quot;&gt;Step 2: Install the Android SDK&lt;/h2&gt;

&lt;p&gt;Download the latest (zipped) SDK package &lt;a href=&quot;https://developer.android.com/sdk/index.html#Other&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Unzip the package and move the extracted folder to your desired location (I have a “Workspace” directory for things like this).&lt;/p&gt;

&lt;h2 id=&quot;step-25-make-sure-ionic-can-access-your-android-development-tools&quot;&gt;Step 2.5: Make sure Ionic can access your android development tools&lt;/h2&gt;

&lt;p&gt;If you try to build your ionic app for android now, it may give you an error saying “ANDROID_HOME” / &lt;code&gt;android&lt;/code&gt; are not defined… To fix this, add the freshly downloaded SDK to your environment by adding these lines to the “.bashrc” file located in your home directory (&lt;code&gt;/Users/[your_name]&lt;/code&gt;):&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;export ANDROID_HOME=&quot;&amp;lt;/path/to/android-sdk-macosx&amp;gt;&quot;
export PATH=${PATH}:$ANDROID_HOME/tools:$ANDROID_HOME/platform-tools
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;em&gt;Note: You should replace the text in angle brackets with the path to your copy of the SDK&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&quot;step-3-install-the-relevant-android-sdk-packages&quot;&gt;Step 3: Install the relevant Android SDK packages&lt;/h2&gt;

&lt;p&gt;Download and install the packages specifed on &lt;a href=&quot;https://developer.android.com/sdk/installing/adding-packages.html&quot;&gt;this page&lt;/a&gt;, as well as the “SDK Platform” package for Android version 21.&lt;/p&gt;

&lt;h2 id=&quot;step-4-install-apache-ant&quot;&gt;Step 4: Install Apache Ant&lt;/h2&gt;

&lt;p&gt;Use &lt;a href=&quot;http://brew.sh/&quot;&gt;homebrew&lt;/a&gt; to install Apache Ant with the following command:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
$ brew install ant
&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&quot;step-5-build-your-project&quot;&gt;Step 5: Build your project&lt;/h2&gt;

&lt;p&gt;Navigate to the root directory of your project:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
$ cd &amp;lt;/path/to/ionic/project&amp;gt;
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Build it for android:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
$ ionic build android
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Plug in your device (making sure debugging is enabled on the device) and run your app on it by entering the following command to your OS X terminal:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
$ ionic run android
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Note: After you plug your device in, make sure you authorize your computer to debug the device (you should see a popup on the device)&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&quot;step-6-profit&quot;&gt;Step 6: Profit!&lt;/h2&gt;

&lt;p&gt;That’s it! You can now debug your app on physical devices.&lt;/p&gt;
</description>
        <pubDate>Fri, 13 Mar 2015 00:00:00 -0700</pubDate>
      </item>
    
      <item>
        <title>CS Reading List</title>
        <link>http://example.com/2015/02/25/cs-reading-list.html</link>
        <guid isPermaLink="true">http://example.com/2015/02/25/cs-reading-list.html</guid>
        <description>&lt;h2 id=&quot;introduction&quot;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;I’ve put together this list in an effort to organize my self-guided study of specific CS topics. It is not meant to be comprehensive in any way, but rather focuses on a select few topics that happen to have caught my interest. I’ve read just a few of the texts listed, but have plans to work through most of them eventually. Feel free to suggest any changes to the list.&lt;/p&gt;

&lt;h3 id=&quot;lispscheme&quot;&gt;LISP/Scheme&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.goodreads.com/book/show/548914.The_Little_Schemer?&quot;&gt;The Little Schemer&lt;/a&gt; and sequels&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.goodreads.com/book/show/1119079.How_to_Design_Programs?from_search=true&quot;&gt;How to Design Programs (HTDP)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.goodreads.com/book/show/43713.Structure_and_Interpretation_of_Computer_Programs?from_search=true&quot;&gt;Structure and Interpretation of Computer Programs (SICP)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.goodreads.com/book/show/6905041-land-of-lisp?from_search=true&quot;&gt;Land of Lisp&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.goodreads.com/book/show/570933.Practical_Common_LISP?from_search=true&quot;&gt;Practical Common Lisp&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.goodreads.com/book/show/41803.On_Lisp?from_search=true&quot;&gt;On Lisp&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.goodreads.com/book/show/4004178-let-over-lambda?from_search=true&quot;&gt;Let Over Lambda&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.amazon.com/Paradigms-Artificial-Intelligence-Programming-Studies/dp/1558601910/ref=sr_1_1?ie=UTF8&amp;amp;qid=1424915418&amp;amp;sr=8-1&amp;amp;keywords=paradigms+of+ai+programming&quot;&gt;Paradigm’s of AI Programming&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;functional-programming--haskell&quot;&gt;Functional Programming / Haskell&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.goodreads.com/book/show/12169041-an-introduction-to-functional-programming-through-lambda-calculus?from_search=true&quot;&gt;An Introduction to Functional Programming through Lambda Calculus&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://learnyouahaskell.com/&quot;&gt;Learn You A Haskell&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.goodreads.com/book/show/475675.The_Haskell_Road_to_Logic_Maths_and_Programming_Second_Edition?from_search=true&quot;&gt;The Haskell Road to Logic, Maths, Programming&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;mathlogic&quot;&gt;Math/Logic&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.goodreads.com/book/show/192221.How_to_Solve_It?from_search=true&quot;&gt;How to Solve It&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.goodreads.com/book/show/194769.To_Mock_a_Mockingbird_and_Other_Logic_Puzzles?from_search=true&quot;&gt;To Mock A Mockingbird&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.goodreads.com/book/show/859122.Introduction_to_Logic?from_search=true&quot;&gt;Introduction to Logic&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.goodreads.com/book/show/24113.G_del_Escher_Bach?from_search=true&quot;&gt;Godel, Escher, Bach&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.goodreads.com/book/show/9206915-godel-s-proof?from_search=true&quot;&gt;Godel’s Proof&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.goodreads.com/book/show/558194.Naive_Set_Theory?from_search=true&quot;&gt;Naive Set Theory&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Wed, 25 Feb 2015 00:00:00 -0800</pubDate>
      </item>
    
      <item>
        <title>Chapter One - Getting started at Hack Reactor</title>
        <link>http://example.com/2015/02/16/hack-reactor-chapter-one.html</link>
        <guid isPermaLink="true">http://example.com/2015/02/16/hack-reactor-chapter-one.html</guid>
        <description>&lt;p&gt;Hello World! If you’ve somehow stumbled onto this page, welcome to my totally
cliched debut into the blogosphere. I’ll avoid the boring “this is what I’ll be
blogging about” / “why you should care about my blog” stuff and talk instead
about something that someone other than myself may (hopefully) find
interesting, i.e. my first few weeks at
&lt;a href=&quot;http://www.hackreactor.com&quot;&gt;Hack Reactor&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;hack-reactor&quot;&gt;Hack Reactor?&lt;/h2&gt;
&lt;p&gt;If you don’t know what Hack Reactor is all about, you really should find
out, because this place is incredible. I first found out about HR when looking into
so-called “coding bootcamps.” While researching/comparing a ton of these
organizations, I found that HR would consistently float to the top of the list
in terms of quality. To date, I don’t think I have read or heard a single
negative thing about the place. In fact, every single review or comment on the place seemed
overwhelmingly positive. I initially thought this to be some marketing wizardry
or the result of some other sort of suspicious online self-promotion, but the
more I looked, the more weight these claims accumulated. My suspicion stayed with me up
through the day I started the program, but having now struggled through the
first two weeks of the curriculum, I can safely say that everything I read was
100% truth. This place really is the &lt;a href=&quot;http://www.phrases.org.uk/meanings/the-bees-knees.html&quot;&gt;bee’s knees&lt;/a&gt; for those who want to break
into the world of software engineering. And this is coming from someone who
studied CS at a well-respected and very well-ranked university. In
fact, it irks me that HR gets lumped into the category “coding bootcamp,” as
this place to me feels like so much more than that label suggests. I haven’t
attended any other of these bootcamps, but I have a hard time imagining any of
them in the same league as this place (with a small number of
&lt;a href=&quot;http://www.wired.com/2015/01/coding-bootcamp-boom-continues-hack-reactor-buy/&quot;&gt;possible exceptions&lt;/a&gt;).&lt;/p&gt;

&lt;h2 id=&quot;the-curriculum&quot;&gt;The Curriculum&lt;/h2&gt;
&lt;p&gt;I’m not really at liberty to divulge any specific details of HR’s curriculum,
and anyway if you want an overview of its content you’d be better served by
&lt;a href=&quot;http://www.hackreactor.com/curriculum/&quot;&gt;their website&lt;/a&gt; or the many threads on
&lt;a href=&quot;http://www.quora.com/Hack-Reactor&quot;&gt;Quora&lt;/a&gt;. What I can provide, is an analogy
that may or may not elucidate the nature of HR’s curriculum and learning in
general… The backdrop for my analogy is
&lt;a href=&quot;http://en.wikipedia.org/wiki/Frank_Herbert&quot;&gt;Frank Herbert’s&lt;/a&gt; excellent novel
&lt;a href=&quot;http://en.wikipedia.org/wiki/Destination:_Void&quot;&gt;Destination Void&lt;/a&gt;, in which a
crew of human clones carefully selected for their specific diversity of skills
is sent on a deep space mission to colonize a distant exoplanet. Their ship
is outfitted with a complex AI system built around an actual human. The AI
system is the controlling force of the ship, maintaining its complex web of
systems and making sure the ship’s payload (thousands of hybernating human
clones) stays alive. The crew are simply caretakers whose roles are minimal in
comparison to the ship’s AI… Or at least, that’s what the crew are led to
believe. When the ship’s AI (and its backups) go mad and self-destruct, the
reader discovers that the actual intent of the mission is to leverage the
abilities of the crew to develop a fully stable artificial consciousness (a task
never before accomplished) by placing the crew in an environment latent with
programmed malfunctions and the constant threat of (potentially fatal) distasters… Now, imagine HR’s lecturers and other staff as the
architects of such a mission, and the students as the crew of the ship. The goal
is to leverage the students’ natural skillsets - by leading them through a
series of challenges and intended frustrations - to produce excellent software
engineers… Okay,
maybe my situation isn’t quite so dramatic as the book, but many of the ideas do
carry over. Working through HR’s curriculum can be a frustrating process, but
that’s kind of the point. HR’s coursework has built-in gotchas (alongside the
&lt;em&gt;straight-up hard&lt;/em&gt; problems that you are working through) and a
not-so-chronological ordering that at times seems counter-productive, but having
emerged successful on the otherside proves to be the secret sauce of the
process. True learning demands struggle. As evidence, just look at babies:
they don’t read books on object permanence or attend “Crawling 101” lectures,
they learn through repeated failure. As anyone whose ever debugged their way out
of a &lt;a href=&quot;http://en.wikipedia.org/wiki/Segmentation_fault&quot;&gt;segmentation fault&lt;/a&gt; or
spent hours tweaking the css stylesheet for a website they’re working on will
know, learning to program or effectively develop for the web requires much the
same process. It’s often the difficulties of a task that we benefit from the most -
they poke and prod the boundaries of our skillsets (and our patience), and
slowly expand our capabilities and endurance.&lt;/p&gt;

&lt;p&gt;Hack Reactor’s process works in contrast to the university norm, in which
students sit through lectures, presumably absorbing all the information they
need to complete exercises given later on. This method can be effective in the
best case (given phenomenal teachers or some other exceptional quality), but on
average produces minimal returns (see research on “flipped classrooms”
vs. the traditional education model). I can feel the effort and thought that the
HR staff has put into their curriculum. It works its magic on me every day I’m there. I have complete
confidence that I’ll come out of this ready to compete for some of the best
software engineering jobs out there.&lt;/p&gt;

&lt;h2 id=&quot;the-culture&quot;&gt;The Culture&lt;/h2&gt;
&lt;p&gt;Besides the curriculum, the other huge thing that HR has got going for it is the
culture. I’ve never worked in a more inspiring, positive, all-around amazing
environment in my life. The staff here truly go above and beyond, and as a
student you are truly in good company. Everyone here is a joy to be around and I
couldn’t be happier with my cohort… That’s all I will say about the culture
here, as it really is something that needs to be experienced.&lt;/p&gt;

&lt;h2 id=&quot;etc&quot;&gt;Etc.&lt;/h2&gt;
&lt;p&gt;The past two weeks have gone by at a blistering speed. I’ve had an incredible
time and look forward to the next 11 weeks of the program (solo week
included). I only wish that time would stop moving so quickly so I could savor
my time here a little more, but I suppose that’s just the way it is around
here…&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/success_kid_blogging.jpg&quot; alt=&quot;Successful blog post&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Mon, 16 Feb 2015 00:00:00 -0800</pubDate>
      </item>
    
  </channel>
</rss>
